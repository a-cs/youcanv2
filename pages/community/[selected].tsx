import Head from 'next/head';
import { google } from 'googleapis';
import Link from 'next/link';
import MemberCard from '../../components/MemberCard';

import getAuthToken from '../../utils/GetAuthToken';

import styles from '../../styles/Community.module.css';

type Params = {
  params: {
    selected: string;
  };
};

interface Community {
  membrosFiltered: string[];
  comunidades: string[];
  selected: string;
}

export async function getStaticProps({ params }: Params) {
  const auth = await getAuthToken();

  const sheets = google.sheets({ version: 'v4', auth });

  const response = await sheets.spreadsheets.values.get({
    spreadsheetId: process.env.SHEET_ID,
    range: 'membros',
  });

  let membros = response.data.values;
  membros = membros?.slice(1);

  const comunidades = [...new Set(membros?.map(item => item[3]))].sort();

  const { selected } = params;

  const membrosFiltered = membros?.filter(membro => membro[3] === selected);

  return {
    props: {
      membrosFiltered,
      comunidades,
      selected,
    },
    revalidate: 5, // In seconds
  };
}

export async function getStaticPaths() {
  const auth = await getAuthToken();

  const sheets = google.sheets({ version: 'v4', auth });

  const response = await sheets.spreadsheets.values.get({
    spreadsheetId: process.env.SHEET_ID,
    range: 'membros',
  });

  let membros = response.data.values;
  membros = membros?.slice(1);

  const comunidades = [...new Set(membros?.map(item => item[3]))].sort();

  const paths = comunidades.map(comunidade => ({
    params: { selected: comunidade },
  }));

  return {
    paths,
    fallback: false,
  };
}

export default function Community({
  selected,
  comunidades,
  membrosFiltered,
}: Community) {
  return (
    <div className={styles.container}>
      <Head>
        <title>You Can Movement - Comunidade</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h3>Se conecte com novas pessoase</h3>
      <p>
        Como funciona? Escolha alguém que mais te chamou atenção e entre em
        contato com essa pessoa e comece seu network, esse é o primeiro passo
        para conquistar seu objetivo. Juntos vamos longe.
      </p>

      <div className={styles.communities}>
        {comunidades.map((comunidade, index) => (
          <div
            className={
              comunidade === selected ? styles.selected : styles.notSelected
            }
            key={index}
          >
            <Link href={`/community/${comunidade}`}>{comunidade}</Link>
          </div>
        ))}
      </div>

      <div className={styles.members}>
        {membrosFiltered.map((membro, index) => (
          <MemberCard
            key={index}
            nome={membro[0]}
            idade={membro[1]}
            foto={membro[2]}
            resumo={membro[4]}
            instagram={membro[5]}
            linkedin={membro[6]}
            facebook={membro[7]}
          />
        ))}
      </div>
    </div>
  );
}
